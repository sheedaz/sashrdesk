// Code generated by shadow-rs generator. DO NOT EDIT.
// Author by:https://www.github.com/baoyachi
// The build script repository:https://github.com/baoyachi/shadow-rs
// Create time by:2024-07-07 06:56:55 +08:00


#[doc=r#"display current branch"#]
#[allow(dead_code)]
pub const BRANCH :&str = r#"master"#;

#[doc=r#"display build system os"#]
#[allow(dead_code)]
pub const BUILD_OS :&str = r#"macos-x86_64"#;

#[doc=r#"display project build by rust channel [debug or release]"#]
#[allow(dead_code)]
pub const BUILD_RUST_CHANNEL :&str = r#"debug"#;

#[doc=r#"display build current project target"#]
#[allow(dead_code)]
pub const BUILD_TARGET :&str = r#"x86_64-apple-darwin"#;

#[doc=r#"display build current project version arch"#]
#[allow(dead_code)]
pub const BUILD_TARGET_ARCH :&str = r#"x86_64"#;

#[doc=r#"display project build time"#]
#[allow(dead_code)]
pub const BUILD_TIME :&str = r#"2024-07-07 06:43:14 +08:00"#;

#[doc=r#"display project build time by rfc2822"#]
#[allow(dead_code)]
pub const BUILD_TIME_2822 :&str = r#"Sun, 07 Jul 2024 06:43:14 +0800"#;

#[doc=r#"display project build time by rfc3399"#]
#[allow(dead_code)]
pub const BUILD_TIME_3339 :&str = r#"2024-07-07T06:43:14+08:00"#;

#[doc=r#"display build current build cargo manifest dir"#]
#[allow(dead_code)]
pub const CARGO_MANIFEST_DIR :&str = r#"/Users/abdulazees/.cargo/git/checkouts/keepawake-rs-b579583c979e8f5b/64d5685"#;

#[doc=r#"display build cargo dependencies.It's used by rust version 1.44.0"#]
#[allow(dead_code)]
pub const CARGO_TREE :&str = r#"
├── anyhow v1.0.71
├── cfg-if v1.0.0
└── core-foundation v0.9.3
    ├── core-foundation-sys v0.8.4
    └── libc v0.2.146
[build-dependencies]
├── shadow-rs v0.21.0
│   ├── const_format v0.2.31
│   │   └── const_format_proc_macros v0.2.31 (proc-macro)
│   │       ├── proc-macro2 v1.0.60
│   │       │   └── unicode-ident v1.0.9
│   │       ├── quote v1.0.28
│   │       │   └── proc-macro2 v1.0.60 (*)
│   │       └── unicode-xid v0.2.4
│   ├── git2 v0.16.1
│   │   ├── bitflags v1.3.2
│   │   ├── libc v0.2.146
│   │   ├── libgit2-sys v0.14.2+1.5.1
│   │   │   ├── libc v0.2.146
│   │   │   └── libz-sys v1.1.9
│   │   │       └── libc v0.2.146
│   │   │       [build-dependencies]
│   │   │       ├── cc v1.0.79
│   │   │       │   └── jobserver v0.1.26
│   │   │       │       └── libc v0.2.146
│   │   │       └── pkg-config v0.3.27
│   │   │   [build-dependencies]
│   │   │   ├── cc v1.0.79 (*)
│   │   │   └── pkg-config v0.3.27
│   │   ├── log v0.4.18
│   │   └── url v2.4.0
│   │       ├── form_urlencoded v1.2.0
│   │       │   └── percent-encoding v2.3.0
│   │       ├── idna v0.4.0
│   │       │   ├── unicode-bidi v0.3.13
│   │       │   └── unicode-normalization v0.1.22
│   │       │       └── tinyvec v1.6.0
│   │       │           └── tinyvec_macros v0.1.1
│   │       └── percent-encoding v2.3.0
│   ├── is_debug v1.0.1
│   ├── time v0.3.22
│   │   ├── itoa v1.0.6
│   │   ├── libc v0.2.146
│   │   ├── num_threads v0.1.6
│   │   │   └── libc v0.2.146
│   │   └── time-core v0.1.1
│   └── tzdb v0.5.7
│       ├── iana-time-zone v0.1.57
│       │   └── core-foundation-sys v0.8.4
│       └── tz-rs v0.6.14
│           └── const_fn v0.4.9 (proc-macro)
└── winres v0.1.12
    └── toml v0.5.11
        └── serde v1.0.164
"#;

#[doc=r#"display build system cargo version"#]
#[allow(dead_code)]
pub const CARGO_VERSION :&str = r#"cargo 1.75.0 (1d8b05cdd 2023-11-20)"#;

#[doc=r#"display current commit author"#]
#[allow(dead_code)]
pub const COMMIT_AUTHOR :&str = r#"RustDesk"#;

#[doc=r#"display current commit date"#]
#[allow(dead_code)]
pub const COMMIT_DATE :&str = r#"2024-04-08 03:21:02 +00:00"#;

#[doc=r#"display current commit date by rfc2822"#]
#[allow(dead_code)]
pub const COMMIT_DATE_2822 :&str = r#"Mon, 08 Apr 2024 03:21:02 +0000"#;

#[doc=r#"display current commit date by rfc3339"#]
#[allow(dead_code)]
pub const COMMIT_DATE_3339 :&str = r#"2024-04-08T03:21:02Z"#;

#[doc=r#"display current commit email"#]
#[allow(dead_code)]
pub const COMMIT_EMAIL :&str = r#"71636191+rustdesk@users.noreply.github.com"#;

#[doc=r#"display current commit_id"#]
#[allow(dead_code)]
pub const COMMIT_HASH :&str = r#"64d568586dd16551d02120e19668d2b0fec8e3c9"#;

#[doc=r#"display current git repository status clean:'true or false'"#]
#[allow(dead_code)]
pub const GIT_CLEAN :bool = true;

#[doc=r#"display current git repository status files:'dirty or stage'"#]
#[allow(dead_code)]
pub const GIT_STATUS_FILE :&str = r#""#;

#[doc=r#"display last tag"#]
#[allow(dead_code)]
pub const LAST_TAG :&str = r#""#;

#[doc=r#"display build current project description"#]
#[allow(dead_code)]
pub const PKG_DESCRIPTION :&str = r#"Keep your computer awake"#;

#[doc=r#"display build current project version"#]
#[allow(dead_code)]
pub const PKG_VERSION :&str = r#"0.4.3"#;

#[doc=r#"display build current project major version"#]
#[allow(dead_code)]
pub const PKG_VERSION_MAJOR :&str = r#"0"#;

#[doc=r#"display build current project minor version"#]
#[allow(dead_code)]
pub const PKG_VERSION_MINOR :&str = r#"4"#;

#[doc=r#"display build current project patch version"#]
#[allow(dead_code)]
pub const PKG_VERSION_PATCH :&str = r#"3"#;

#[doc=r#"display build current project preview version"#]
#[allow(dead_code)]
pub const PKG_VERSION_PRE :&str = r#""#;

#[doc=r#"display project name"#]
#[allow(dead_code)]
pub const PROJECT_NAME :&str = r#"keepawake"#;

#[doc=r#"display build system rust channel"#]
#[allow(dead_code)]
pub const RUST_CHANNEL :&str = r#"stable-x86_64-apple-darwin"#;

#[doc=r#"display build system rust version"#]
#[allow(dead_code)]
pub const RUST_VERSION :&str = r#"rustc 1.75.0 (82e1608df 2023-12-21)"#;

#[doc=r#"display current short commit_id"#]
#[allow(dead_code)]
pub const SHORT_COMMIT :&str = r#"64d56858"#;

#[doc=r#"display current tag"#]
#[allow(dead_code)]
pub const TAG :&str = r#""#;

/// The common version const. It's so easy to use this const.
#[allow(dead_code)]
pub const VERSION:&str = shadow_rs::formatcp!(r#"
pkg_version:{}
branch:{}
commit_hash:{}
build_time:{}
build_env:{},{}"#,PKG_VERSION, BRANCH, SHORT_COMMIT, BUILD_TIME, RUST_VERSION, RUST_CHANNEL
);

/// The common version const. It's so easy to use this const with `CLAP_VERSION`.
#[allow(dead_code)]
#[deprecated = "Replaced with `CLAP_LONG_VERSION`"]
pub const CLAP_VERSION:&str = shadow_rs::formatcp!(r#"{}
branch:{}
commit_hash:{}
build_time:{}
build_env:{},{}"#,PKG_VERSION, BRANCH, SHORT_COMMIT, BUILD_TIME, RUST_VERSION, RUST_CHANNEL
);

/// The common version const. It's so easy to use this const with `CLAP_VERSION`.
#[allow(dead_code)]
pub const CLAP_LONG_VERSION:&str = shadow_rs::formatcp!(r#"{}
branch:{}
commit_hash:{}
build_time:{}
build_env:{},{}"#,PKG_VERSION, BRANCH, SHORT_COMMIT, BUILD_TIME, RUST_VERSION, RUST_CHANNEL
);

/// print build in method
#[allow(dead_code)]
pub fn print_build_in() {
	println!("BRANCH:{BRANCH}\n");
	println!("BUILD_OS:{BUILD_OS}\n");
	println!("BUILD_RUST_CHANNEL:{BUILD_RUST_CHANNEL}\n");
	println!("BUILD_TARGET:{BUILD_TARGET}\n");
	println!("BUILD_TARGET_ARCH:{BUILD_TARGET_ARCH}\n");
	println!("BUILD_TIME:{BUILD_TIME}\n");
	println!("BUILD_TIME_2822:{BUILD_TIME_2822}\n");
	println!("BUILD_TIME_3339:{BUILD_TIME_3339}\n");
	println!("CARGO_MANIFEST_DIR:{CARGO_MANIFEST_DIR}\n");
	println!("CARGO_TREE:{CARGO_TREE}\n");
	println!("CARGO_VERSION:{CARGO_VERSION}\n");
	println!("COMMIT_AUTHOR:{COMMIT_AUTHOR}\n");
	println!("COMMIT_DATE:{COMMIT_DATE}\n");
	println!("COMMIT_DATE_2822:{COMMIT_DATE_2822}\n");
	println!("COMMIT_DATE_3339:{COMMIT_DATE_3339}\n");
	println!("COMMIT_EMAIL:{COMMIT_EMAIL}\n");
	println!("COMMIT_HASH:{COMMIT_HASH}\n");
	println!("GIT_CLEAN:{GIT_CLEAN}\n");
	println!("GIT_STATUS_FILE:{GIT_STATUS_FILE}\n");
	println!("LAST_TAG:{LAST_TAG}\n");
	println!("PKG_DESCRIPTION:{PKG_DESCRIPTION}\n");
	println!("PKG_VERSION:{PKG_VERSION}\n");
	println!("PKG_VERSION_MAJOR:{PKG_VERSION_MAJOR}\n");
	println!("PKG_VERSION_MINOR:{PKG_VERSION_MINOR}\n");
	println!("PKG_VERSION_PATCH:{PKG_VERSION_PATCH}\n");
	println!("PKG_VERSION_PRE:{PKG_VERSION_PRE}\n");
	println!("PROJECT_NAME:{PROJECT_NAME}\n");
	println!("RUST_CHANNEL:{RUST_CHANNEL}\n");
	println!("RUST_VERSION:{RUST_VERSION}\n");
	println!("SHORT_COMMIT:{SHORT_COMMIT}\n");
	println!("TAG:{TAG}\n");
	println!("VERSION:{VERSION}\n");
	println!("CLAP_LONG_VERSION:{CLAP_LONG_VERSION}\n");
}

